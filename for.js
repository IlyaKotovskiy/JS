// for (let i = 10; i >= 0; i--) {
//     console.log(i)
// }

// let num = 5
// let fac = 1
// for (let i = 1; i <= num; i++) {
//     fac = fac * i
// }

// console.log(fac)

// let x = 10
// let y = 20
// let day
// for (let i = 1; x < y; i++) {
//     x *= 1.1
//     day = i
// }

// console.log(day)

// let word = `Грант`
// for (let i = 0; i < word.length; i++) {
//     if (word[i].toLowerCase != `н`) {
//         console.log(word[i - 1])
//     } else {
//         console.log(word[i - 1])
//         break
//     }
// }

// Добавление в массив какого - либо значения
// array[array.length] = value



// Взаимодейсвтвие с массивом

// push(n)      - метод, добавляющий аргумент n в конец массива
// pop()        - метод, удаляющий последний элемент в массиве
// unshift(n)   - метод, добавляющий аргумент n в начало массива
// shift()      - метод, удаляющий первый элемент в массиве

// let array = [1,2,3]

// array.pop()          - удалит элемент 3
// array.shift()        - удалит элемент 1
// array.push(4)        - добавит аргумент 4 в конец
// array.unshift(0)     - добавит аргумент 0 в начало

// console.log(array)

// -----------------------------------
// метод splice()  - метод, позволяющий удалить и добавить элементы в любое место массива
// 1 аргумент указывает индекс старта
// 2 аргумент указывает количетсво удаляемых элементов начиная с точки старта
// 3 аргумент(и более) определяет новые элементы, которые необходимо добавить ДО 1 аргумента

// let array = [1,2,3,4,5,6,7]

// Начиная с 2 индекса удали 3 элемента
// array.splice(2,3)
// [ 1, 2, 6, 7 ]

// Начиная с 1 индекса, удали 5 элементов
// array.splice(1,5)
// [ 1, 7 ]

// Начиная с 1 индекса српава удали 1 элемента
// array.splice(-1,1)
// [ 1, 2, 3, 4, 5, 6 ]

// Добавь новый элемент 15 до 4 индекса
// array.splice(4, 0, 15)
// [1, 2, 3, 4, 15, 5, 6, 7]

// Добавь новый элемент "привет" до 4 индекса
// array.splice(4, 0, "привет", 1000,4000)
// [ 1, 2, 3, 4, 'привет', 1000, 4000, 5, 6, 7 ]

// array.splice(2,3,"три","четыре","пять")
// [ 1, 2, 'три', 'четыре', 'пять', 6, 7 ]


// console.log(array)

// -----------------------
// Задача 1
// Реализуйте следующие задачи в массиве array, используя метод splice:
// 1) В начале добавьте два элемент (1,2)
// 2) После 3 элемента добавьте значение (4)
// 3) Удалите последние 2 элемента

// let array = ['яблоко', "апельсин", "арбуз","дыня"]

// Результат:
// [1,2,'яблоко', 4, "апельсин"]

// array.splice(0,0,1,2)
// array.splice(3,0,4)
// array.splice(-2,2)
// console.log(array)

// -----------------------
// Задача 2.
// Напишите функцию replaceBoolElem(array), которая заменяет попавшийся булевый тип на 2 элемента массива
// с значениями "булевый" и "тип". Функция должна вывести в косноль измененный массив

// Пример: [1,2,true,5,6]
// Результат: [1,2,"булевый","тип",5,6]

// решение

// function replaceBoolElem(array){
//     for (let i = 0; i < array.length; i++){
//         if(typeof array[i] == 'boolean'){
//             array.splice(i, 1, 'булевый', 'тип')
//         }
//     }
//     console.log(array)
// }

// replaceBoolElem([1,2,true,true,5,6])

// -------------------------
// Задача 3
// Напишите функцию addNumber(array), которая принимает массив и добавлявет элемент "Цифра" после числа согласно примеру:
// Пример:
// let array = ['строка',1, 'hello',3 ,true]

// Результат:
// ['строка', 1, 'Цифра', 'hello', 3,'Цифра', true]

// function addNumber(array){
//     for (let i = 0; i < array.length; i++){
//         if(typeof array[i] == 'number'){
//             array.splice(i+1, 0, 'Цифра')
//         }
//     }
//     console.log(array)
// }


// -------------------------
// метод slice()    - возвращает новый массив с указанными элементами

// let array = [1,2,3,4,5]

// console.log(array.slice(1))      [2, 3, 4, 5]
// console.log(array.slice(1,4))    [2, 3, 4]
// console.log(array.slice(-2))     [4, 5]
// console.log(array.slice(4))      [5]
// console.log(array.slice(-1))     [5]



// -------------------------
// Деструктуризирующее присвоение

// let array = [10,20,30]

// let [a,b,c] = array  // - присваивает значение по порядку в массиве
// console.log(a,b,c)

// -------------------------
//  Нюансы


// let [a,b,c] = [10,20,30,40,50]
// console.log(a,b,c)   // 40,50 просто пропадут


// let [a,b,c] = [10,20]
// console.log(a,b,c)   // 10 20 undefined


// -------------------------
// Rest and Spread-операторы (аргументы)
// Распаковка массива и представление каждого элемента как отдельный аргумент для функции/метода

// let array =  ['Один', 'Два', 'Три']
// console.log(array[0], array[1], array[2])
// let h = [...array]
// console.log(h, ...array)


// -------------------
// Где еще можно указать распаковку
// Копирование массива

// let a = [1,2,4]
// let b = [...a]

// console.log(a,b, a == b)

//-------------------
// let a = [1,2,3]
// let b = [5,6,7]

// let c = [...a, 4]            [ 1, 2, 3, 4 ]
// let c = [4,...a]             [ 4, 1, 2, 3 ]
// let c = [...a,4,...b]        [1, 2, 3, 4, 5, 6, 7]

// console.log(c)

// -------------------------
// Вернемся к деструктуризации

// let [a,b,...c] = [10,20,30,40,50,60]

// console.log(a,b)
// console.log(c)



// -------------------------
// Задача 1
// Сущетсвуют методы Math.max() и Math.min(), которые возвращает максимольное и миниальное значение переданных АРГУМЕНТОВ!
// Задан массив array. Определите максимальное и минимальное значение.
// let array = [100,600,-100,1000,-400]

// console.log(Math.min(...array), Math.max(...array))


// Задача 2
// Задан массив array. Используя функции Math.max и min определите наибольшее
// и наименьшее значения массива в виде двух переменных max и min.
// Примечание: необходимо решить используя всего 2 строчки кода (c учетом let array = [100......)
// Решение

// let array = [100,200,600,-400,-100,1000]
// let [min,max] = [Math.min(...array), Math.max(...array)]
// console.log(min,max)


// b = [...a]                      - spread(распаковывает массив)
// log(...a)                       - spread(распаковывает массив)
// let [a,b,...a] = [1,2,3,4,5,6]  - rest(формирует массив)
// function log(...a){             - rest(формирует массив)
//     ...a
// }

// -------------------------
// Rest-операторы (аргументы)

// function log(...rest){
//     console.log(rest)
// }

// log(1,2,3,4,5,6,7,8)


// -------------------------
// Цикл по массиву

// for (let elem IN object)         - цикл по ключам объекта
// for (let elem OF array)          - цикл по значениям элемента массива
// for (let elem IN array)          - цикл по индексам элементов массива

// let a = [1, 2, 3, 4, 5]
// let b = []

// for (let i in a) {
//     a[i] = 100
//     b.push(i)
// }

// console.log(a,b)


// -------------------------
// Задача 1
// Напишите функцию getSum(), которая может принимать любое количество
// аргументов и выводит в консоль итогувую сумму все аргументов.
// Пример: getSum(1,2,3,4)
// Результат: 10

// function getSum(...rest) {
//     let sum = 0
//     for(let i of rest){
//         sum += i
//     }
//     console.log(sum)
// }

// getSum(2,7,3)
// getSum(2,7,8,628)


// -------------------------
// Еще про rest

// function func(a,...rest){
//     console.log(a, rest)
// }

// func(9,5,5,2)


// -------------------------
// Дефолтное значение





// -------------------------
// Задача 2
// Напишите функцию checkElem(), которая может принимать любое количество
// аргументов и реализует следующее вычисление:
// Если значение первого аргумента совпaдает с значениями прочих аргументов -
// функция должна вернуть true, иначе false

// Пример:
// function checkElem(first, ...rest){
//     for(let i of rest){
//         if(i == first){
//             return true
//         }
//     }
//     return false
// }

// console.log(checkElem(5,1,2,3,4,5))
// console.log(checkElem(6,1,2,3,4,5))

// Результат:
// true
// false